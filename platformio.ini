; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
custom_firmware_version = 0.7.0
; build_type = debug
build_flags = 
	; -D ENABLE_TRACE
	; -D AC_DEBUG
	-D ARDUINOJSON_USE_LONG_LONG=1
	-D _TASK_STATUS_REQUEST
	-D _TASK_TIMEOUT
	-D _TASK_OO_CALLBACKS
	-D _TASK_TIMECRITICAL
	-D _TASK_WDT_IDS
	-D _TASK_DEBUG
	-D _TASK_EXPOSE_CHAIN
lib_deps = 
	TaskScheduler@^3.1
	ArduinoJson@^6.19.4
	WebSockets@^2.3.7
	git+https://github.com/tzapu/WiFiManager.git#v2.0.15-rc.1
board_build.filesystem = littlefs
build_unflags = -fno-rtti
monitor_speed = 115200
upload_speed = 921600
extra_scripts = pre:insert_firmware_version.py

[esp32]
build_flags = 
	-D JSON_PAYLOAD_SIZE=2048

[esp8266]
lib_deps =
	bblanchon/StreamUtils@~1.7.0
build_flags = 
	-D JSON_PAYLOAD_SIZE=1024
	-D MINIMAL_BUILD


[env:esp32doit-devkit-v1]
custom_firmware_name = ima_mainline
platform = espressif32@4.2.0
board = esp32doit-devkit-v1
board_build.partitions = min_spiffs.csv
framework = arduino
lib_deps = 
	${env.lib_deps}
	DallasTemperature@^3.11.0
	claws/BH1750@^1.1.4
	robtillaart/Max44009@^0.5.2
	SparkFun BME280@^2.0.1
	Adafruit NeoPixel@^1.10.5
	git+https://github.com/InamataCo/ezo-i2c-sensors.git#v1
build_flags = 
	${env.build_flags}
	${esp32.build_flags}
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}

; Athom 16A EU V2 Power Monitoring Plug (PG01V2-EU16A-TAS)
[env:athom-plug-v2]
custom_firmware_name = ima_minimal
platform = espressif8266
framework = arduino
board = esp8285
board_build.ldscript = "eagle.flash.2m.ld"
upload_resetmethod = nodemcu
lib_deps = 
	${env.lib_deps}
	${esp8266.lib_deps}
build_flags = 
	${env.build_flags}
	${esp8266.build_flags}
monitor_filters = esp8266_exception_decoder, default
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}

[env:esp8266]
custom_firmware_name = ima_minimal
platform = espressif8266
framework = arduino
board = nodemcuv2
lib_deps = 
	${env.lib_deps}
	${esp8266.lib_deps}
build_flags = 
	${env.build_flags}
	${esp8266.build_flags}
build_unflags = ${env.build_unflags}
monitor_speed = ${env.monitor_speed}
upload_speed = ${env.upload_speed}
extra_scripts = ${env.extra_scripts}